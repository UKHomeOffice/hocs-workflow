buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
		camelVersion = '2.23.0'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: "net.ltgt.apt"


task copyLombok(type: Copy) {
	outputs.upToDateWhen { false }
	into "${buildDir}/libs"
	include "lombok*.jar"
	from configurations.compileOnly
}

build.dependsOn(copyLombok)

group = 'uk.gov.digital.ho.hocs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.camunda.bpm:camunda-bom:7.9.0'
	}
}

dependencies {

	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude(module: 'spring-boot-starter-tomcat')
	}
	implementation('org.springframework.boot:spring-boot-starter-undertow')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-json')
	implementation('org.springframework.boot:spring-boot-starter-cache')
	implementation('org.springframework.retry:spring-retry')
	implementation("org.apache.camel:camel-aws:${camelVersion}")
	implementation("org.apache.camel:camel-spring-boot-starter:${camelVersion}")
	implementation('com.github.ben-manes.caffeine:caffeine')
	implementation('com.amazonaws:aws-java-sdk:1.11.470')

	implementation('net.logstash.logback:logstash-logback-encoder:5.2')

	implementation('org.camunda.bpm:camunda-engine-spring:7.9.0')
	implementation('com.fasterxml.uuid:java-uuid-generator:3.1.2')

	implementation('org.postgresql:postgresql')
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.apache.camel:camel-test-spring:${camelVersion}")
	testImplementation('org.assertj:assertj-core')

	testCompile group: 'org.camunda.bpm.extension', name: 'camunda-bpm-assert', version: '1.1'
	testCompile group: 'org.camunda.bpm.extension.mockito', name: 'camunda-bpm-mockito', version: '4.13.0'
	testCompile group: 'org.camunda.bpm.extension', name: 'camunda-bpm-assert-scenario', version: '1.0.0'
	testCompile group: 'org.camunda.bpm.extension', name: 'camunda-bpm-process-test-coverage', version: '0.4.0'

	testImplementation('com.h2database:h2')

}

sourceSets {
    test {
        resources.srcDir 'src/main/resources'
    }

    integrationTest {
        java.srcDir 'src/integration-test/java'
        resources.srcDir 'src/integration-test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntime
}

task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
}

check.dependsOn integrationTest
