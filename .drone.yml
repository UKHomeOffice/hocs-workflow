pipeline:

  build-project:
    image: quay.io/ukhomeofficedigital/openjdk8
    commands:
      - export SPRING_PROFILES_ACTIVE='development, local'
      - export SERVER_PORT='8080'
      - export CASE_QUEUE_NAME='case-queue'
      - export CASE_QUEUE_DLQ_NAME='case-queue-dlq'
      - export DOCS_QUEUE_NAME='document-queue'
      - export DOCS_QUEUE_DLQ_NAME='document-queue-dlq'
      - export HOCS_URL='http://localhost:8080'
      - export HOCS_CASE_SERVICE='http://casework:8080'
      - export HOCS_DOCUMENT_SERVICE='http://documents:8080'
      - export HOCS_INFO_SERVICE='http://info:8080'
      - export DB_HOST='postgres'
      - export AWS_LOCAL_HOST='localstack'
      - ./gradlew build
    when:
      event: [push, pull_request, tag]

#  sonar-scanner:
#    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
#    when:
#      event: [push, pull_request, tag]

  docker-build:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build -t hocs-workflow .
    when:
      branch: [master, refs/tags/*]
      event: [push, tag]

  install-docker-image:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+hocs" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag hocs-workflow quay.io/ukhomeofficedigital/hocs-workflow:build-$${DRONE_BUILD_NUMBER}
      - docker tag hocs-workflow quay.io/ukhomeofficedigital/hocs-workflow:latest
      - docker push quay.io/ukhomeofficedigital/hocs-workflow:build-$${DRONE_BUILD_NUMBER}
      - docker push quay.io/ukhomeofficedigital/hocs-workflow:latest
    when:
      branch: master
      event: push

  tag-docker-image-with-git-tag:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+hocs" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag hocs-workflow quay.io/ukhomeofficedigital/hocs-workflow:$${DRONE_TAG}
      - docker push quay.io/ukhomeofficedigital/hocs-workflow:$${DRONE_TAG}
    when:
      event: tag
  clone-kube-project:
    image: plugins/git
    commands:
      - git clone https://github.com/UKHomeOffice/kube-hocs-workflow.git
    when:
      event: [push, tag, deployment]

  deploy-to-dev-from-build-number:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-dev
      - ENVIRONMENT=dev
      - VERSION=build-${DRONE_BUILD_NUMBER}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_workflow_dev
    commands:
      - cd kube-hocs-workflow
      - ./deploy.sh
    when:
      branch: master
      event: [push, tag]

  deployment:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-${DRONE_DEPLOY_TO}
      - ENVIRONMENT=${DRONE_DEPLOY_TO}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - hocs_workflow_dev
      - hocs_workflow_demo
      - hocs_workflow_qa
    commands:
      - cd kube-hocs-workflow
      - ./deploy.sh
    when:
      event: deployment
      environment: [dev, qa, demo]

  deploy-to-prod:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=cs-prod
      - ENVIRONMENT=prod
      - VERSION=${IMAGE_VERSION}
      - KUBE_SERVER=https://kube-api-prod.prod.acp.homeoffice.gov.uk
    secrets:
      - hocs_workflow_prod
    commands:
      - cd kube-hocs-workflow
      - ./deploy.sh
    when:
      event: deployment
      environment: prod
services:
  postgres:
    image: quay.io/ukhomeofficedigital/postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
  localstack:
    image: localstack/localstack:latest
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,s3
  aws_cli:
    image: garland/aws-cli-docker
    command:
      - /bin/sh
      - -c
      - |
          aws --endpoint-url=http://localstack:4572 s3 mb s3://untrusted-bucket
          aws --endpoint-url=http://localstack:4572 s3 mb s3://trusted-bucket
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue-dlq
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue-dlq
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue
          aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue-dlq
    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'